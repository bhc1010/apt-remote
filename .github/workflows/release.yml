name: Build & Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags like v1.2.3

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: apt-remote.deb
          - os: macos-latest
            artifact_name: apt-remote.pkg
          - os: windows-latest
            artifact_name: apt-remote.msi

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Linux: install cargo-deb
      - name: Install cargo-deb
        if: matrix.os == 'ubuntu-latest'
        run: cargo install cargo-deb

      # macOS: install pkgbuild tool (already included on macOS runners)
      #- name: Install macOS packaging tools
      #  if: matrix.os == 'macos-latest'
      #  run: echo "pkgbuild is already available on macOS GitHub runners"

      # Windows: install WiX Toolset
      - name: Install WiX Toolset
        if: matrix.os == 'windows-latest'
        run: choco install wixtoolset --no-progress

      # Build step
      - name: Build Release
        run: cargo build --release

      # Package for Linux
      - name: Package as .deb
        if: matrix.os == 'ubuntu-latest'
        run: cargo deb --no-build --output ${{ matrix.artifact_name }}

      # Package for macOS (.pkg)
      - name: Package as .pkg
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p pkgroot/usr/local/bin
          cp target/release/apt-remote pkgroot/usr/local/bin/
          pkgbuild --root pkgroot \
                   --identifier com.bhc1010.apt-remote \
                   --version ${GITHUB_REF_NAME#v} \
                   --install-location /usr/local/bin \
                   ${{ matrix.artifact_name }}

      # Package for Windows (.msi)
      - name: Package as .msi
        if: matrix.os == 'windows-latest'
        run: |
          candle installer.wxs
          light installer.wixobj -o ${{ matrix.artifact_name }}

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
