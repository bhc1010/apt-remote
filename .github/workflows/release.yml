name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross --locked

      - name: Build
        run: cross build --release --target ${{ matrix.target }}

      - name: Prepare Artifact
        run: |
          mkdir dist
          BIN="apt-remote"
          case "${{ matrix.os }}" in
            windows-latest) BIN="$BIN.exe" ;;
          esac
          mv target/${{ matrix.target }}/release/$BIN dist/$BIN-${{ matrix.target }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apt-remote-${{ matrix.target }}
          path: dist/*

  deb:
    name: Build .deb Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install cargo-deb
        run: cargo install cargo-deb --locked

      - name: Build .deb
        run: cargo deb --no-build

      - name: Upload .deb
        uses: actions/upload-artifact@v4
        with:
          name: apt-remote-deb
          path: target/debian/*.deb

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [build, deb]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
