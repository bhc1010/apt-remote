name: Build & Release

on:
  push:
    tags:
      - 'v*'  # e.g. v1.0.0

jobs:
  linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install packaging tools
        run: cargo install cargo-deb

      - name: Build release
        run: cargo deb

      - name: Upload Linux installers to Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/debian/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Build release binary
        run: cargo build --release

      - name: Create macOS .pkg installer
        run: |
          mkdir -p pkgroot/usr/local/bin
          cp target/release/apt-remote pkgroot/usr/local/bin/
          pkgbuild --root pkgroot \
                   --identifier com.example.apt-remote \
                   --version "${GITHUB_REF_NAME#v}" \
                   --install-location / \
                   apt-remote-macos.pkg

      - name: Upload macOS .pkg to Release
        uses: softprops/action-gh-release@v1
        with:
          files: apt-remote-macos.pkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Build release binary
        run: cargo build --release

      - name: Install cargo-wix
        run: cargo install cargo-wix

      - name: Build MSI installer
        run: |
          cargo wix init
          cargo wix

      - name: Upload Windows .msi to Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/wix/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
